sd
load
list.files()
help(rep)
ranks <- 1:3
ranks
names(ranks) <- c('somil','agar','wal')
ranks['agar']
barplot(1:100)
x <- seq(1, 20, 0.1)
x
Many functions that work with vectors treat this value specially.
y <- sum(1,2,NA,3)
y
x <- c(1,2,3,NA,4)
sum(x)
sum(x,TRUE)
sum(x,na.rm=TRUE)
seq(1,10)
x
dim(x) <- c(5,1)
x
abline(h=3)
barplot(c(1,3,5,3,8,5))
abline(h=3)
abline(h=8)
install.packages("ggplot2")
help(sum)
demo()
demo()
?rnorm
help
help.search('rnorm')
args('rnorm')
rnorm
package<- available.packages();
View(package)
install.packages("slidify");
install.packages("devtools");
install.packages("ggplot2")
library(ggplot2);
library(ggplot2)
library(ggplot2);
search()
drv = dbDriver("MySql");
drv = dbDriver("MySql")
drv = dbDriver("MySQL")
install.packages("sqldf");
View(package)
drv = dbDriver("MySQL");
drv = dbDriver("MySql")
install.packages("RMySQL");
install.packages("RMySQL");
drv = dbDriver("MySQL");
install.packages("DBI");
install.packages("ggplot2");
install.packages("RMySQL");
install.packages("slidify");
library("DBI", lib.loc="/home/somil/R/i686-pc-linux-gnu-library/3.1")
detach("package:DBI", unload=TRUE)
library("DBI", lib.loc="/home/somil/R/i686-pc-linux-gnu-library/3.1")
install.packages("sqldf");
drv = dbDriver("MySQL");
drv = dbDriver("MySql");
drv = dbDriver("MySQL");
pcon <- dbConnect(p, "user", "password", "dbname")
install.packages("PgSQL");
df2 <- fetch(rs, n = -1)
df
df2 <- fetch(rs, n = -1)
rs <- dbSendQuery(con,"select * from property.QUERY limit 2")
con <- dbConnect(MySQL(), user='user', password='CLDLRTa9', dbname='', host='172.16.3.43'
rs <- dbSendQuery(con,"select * from property.QUERY limit 2")
con <- dbConnect(MySQL(), user='user', password='CLDLRTa9', dbname='', host='172.16.3.43')
library(RMySQL);
## Not run:
# create a MySQL instance for capacity of up to 25 simultaneous
# connections.
m <- dbDriver("MySQL", max.con = 25)
# open the connection using user, password, etc., as
con <- dbConnect(MySQL(), user='user', password='CLDLRTa9', dbname='', host='172.16.3.43')
rs <- dbSendQuery(con,"select * from property.QUERY limit 2")
library('DBI');
library(RMySQL);
## Not run:
# create a MySQL instance for capacity of up to 25 simultaneous
# connections.
m <- dbDriver("MySQL", max.con = 25)
# open the connection using user, password, etc., as
con <- dbConnect(MySQL(), user='user', password='CLDLRTa9', dbname='', host='172.16.3.43')
rs <- dbSendQuery(con,"select PROFILEID from property.QUERY limit 2")
df <- fetch(rs, n = 50)
df2 <- fetch(rs, n = -1)
dbClearResult(rs)
library('DBI');
library(RMySQL);
## Not run:
# create a MySQL instance for capacity of up to 25 simultaneous
# connections.
m <- dbDriver("MySQL", max.con = 25)
# open the connection using user, password, etc., as
con <- dbConnect(MySQL(), user='user', password='CLDLRTa9', dbname='', host='172.16.3.43')
rs <- dbSendQuery(con,"select PROFILEID from property.QUERY limit 2")
df <- fetch(rs, n = 50)
df
rs <- dbSendQuery(con,"select PROFILEID from property.QUERY where PROFILEID > 0 limit 25")
df <- fetch(rs, n = 50)
df
df2 <- fetch(rs, n = -1)
rs <- dbSendQuery(con,"select PROFILEID,EMAIL from property.QUERY where PROFILEID > 0 limit 25")
df <- fetch(rs, n = 50)
df
rs <- dbSendQuery(con,"select PROFILEID,EMAIL from property.QUERY where PROFILEID > 0 limit 100")
df <- fetch(rs, n = 50)
df
df <- fetch(rs, n = -1)
df
mtcars;
sqldf
libbrary(sqldf)
library(sqldf)
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
vamData = read.csv("/opt/VAM_99/test.csv");
vamData
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
source('~/Desktop/vam.R')
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",header=TRUE,sep=",",nrows=100);
vamData
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",header=TRUE,sep="|",nrows=100);
vamData
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",header=TRUE,nrows=100);
vamData
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",header=TRUE,sep="|",nrows=100);
vamData
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",header=TRUE,sep="\n",nrows=100);
vamData
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",header=TRUE,sep="|",nrows=100);
vamData
library(sqldf)
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",header=TRUE,sep="|",nrows=100);
vamData
head(vamData)
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",sep="|",nrows=100);
vamData
head(vamData)
library(sqldf)
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",sep="|",nrows=100);
vamData
sqldf("select ID,ACTION_TYPE from vamData where ID = 1277894643")
library(sqldf)
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",sep="|",nrows=100);
vamData
sqldf("select count(*),VISITOR_ID,DATE(RECIEVED_TIME) from VISITOR_ACTION_MAP where DATE(RECIEVED_TIME) = '2014-07-17' and ACTION_TYPE like '%CLICK%' group by VISITOR_ID,3")
sqldf("select count(*),VISITOR_ID,DATE(RECIEVED_TIME) from vamData where DATE(RECIEVED_TIME) = '2014-07-17' and ACTION_TYPE like '%CLICK%' group by VISITOR_ID,3")
library(sqldf)
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",sep="|",nrows=100);
vamData
sqldf("select count(*),VISITOR_ID,DATE(RECIEVED_TIME) from vamData where DATE(RECIEVED_TIME) = '2014-06-15' and ACTION_TYPE like '%CLICK%' group by VISITOR_ID,3")
sqldf("select count(*),VISITOR_ID from vamData where ACTION_TYPE like '%CLICK%' group by VISITOR_ID,3")
sqldf("select count(*),VISITOR_ID from vamData where ACTION_TYPE like '%CLICK%' group by VISITOR_ID")
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",sep="|",nrows=10000);
vamData
sqldf("select count(*),VISITOR_ID from vamData where ACTION_TYPE like '%CLICK%' group by VISITOR_ID")
vamData = read.csv("/opt/VAM_99/15Jun14_VAM.csv",sep="|",nrows=100000);
vamData
sqldf("select count(*),VISITOR_ID from vamData where ACTION_TYPE like '%CLICK%' group by VISITOR_ID")
(sqldf)
(sqldf)
(sqldf)
(sqldf)
sqldf("select count(*),VISITOR_ID from vamData where ACTION_TYPE like '%CLICK%' group by VISITOR_ID")
vamData = read.csv("/opt/VAM_99/16Jun14_VAM.csv",sep="|",nrows=100000);
vamData
sqldf("select count(*),VISITOR_ID from vamData where ACTION_TYPE like '%CLICK%' group by VISITOR_ID")
clear
clear()
clear();
library(sqldf)
vamData = read.csv("/opt/VAM_99/16Jun14_VAM.csv",sep="|");
sqldf("select count(*),VISITOR_ID from vamData where ACTION_TYPE like '%CLICK%' group by VISITOR_ID")
library('kimisc')
library('ggplot2')
library('rpart')
library('randomForest')
passengerTrainingData = read.csv("train.csv",sep=",")
summary(passengerTrainingData)
hist(passengerTrainingData$Age);
setwd("/Hard Disk/git/datasci_course_materials/kaggle")
library('caret')
library('kimisc')
library('ggplot2')
library('rpart')
library('randomForest')
passengerTrainingData = read.csv("train.csv",sep=",")
summary(passengerTrainingData)
hist(passengerTrainingData$Age);
